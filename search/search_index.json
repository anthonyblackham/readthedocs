{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to the Read the Docs Documentation! Read The Docs primarily uses python, sphinx, and ReStructured Text (RST) to create robust and aesthetically pleasing documentation. MkDocs uses python and Markdown but MkDocs also has a Read the Docs theme. While the sphinx based version can use markdown as well, we will focus on the MkDocs version as it's more tailored to markdown. There are some advantages to RST (eg PDF and LAtex generation among others) Read this post for some discussion on using RST vs Markdown. In my opinion the general consensus is that RST is more robust for technical documentation whereas markdown was created with simplicity in mind and as a result can have some limitations.","title":"Home"},{"location":"#welcome-to-the-read-the-docs-documentation","text":"Read The Docs primarily uses python, sphinx, and ReStructured Text (RST) to create robust and aesthetically pleasing documentation. MkDocs uses python and Markdown but MkDocs also has a Read the Docs theme. While the sphinx based version can use markdown as well, we will focus on the MkDocs version as it's more tailored to markdown. There are some advantages to RST (eg PDF and LAtex generation among others) Read this post for some discussion on using RST vs Markdown. In my opinion the general consensus is that RST is more robust for technical documentation whereas markdown was created with simplicity in mind and as a result can have some limitations.","title":"Welcome to the Read the Docs Documentation!"},{"location":"Configuration/","text":"mkdocs.yml This is a default mkdocs.yml: site_name: My Docs You can get a list of your pages cd repo.wiki.git ls > pages.txt Final result: # Project information site_name: 'Read the Docs' site_description: 'Documentation using MkDocs with the Read the Docs theme' site_author: 'Anthony Blackham' site_url: 'https://anthonyblackham.com/readthedocs' # Repository repo_name: 'readthedocs' repo_url: 'https://github.com/anthonyblackham/readthedocs' edit_uri: 'edit/main/docs/' # Copyright copyright: 'Copyright &copy; 2020 Anthony Blackham' # Configuration theme: name: 'readthedocs' language: 'en' # Pages pages: - Home: index.md - Installation: Installation.md - Getting Started: Getting-Started.md - Style Guide: Style-Guide.md - Configuration: Configuration.md - Deploy: Deploy.md","title":"Configuration"},{"location":"Configuration/#mkdocsyml","text":"This is a default mkdocs.yml: site_name: My Docs You can get a list of your pages cd repo.wiki.git ls > pages.txt Final result: # Project information site_name: 'Read the Docs' site_description: 'Documentation using MkDocs with the Read the Docs theme' site_author: 'Anthony Blackham' site_url: 'https://anthonyblackham.com/readthedocs' # Repository repo_name: 'readthedocs' repo_url: 'https://github.com/anthonyblackham/readthedocs' edit_uri: 'edit/main/docs/' # Copyright copyright: 'Copyright &copy; 2020 Anthony Blackham' # Configuration theme: name: 'readthedocs' language: 'en' # Pages pages: - Home: index.md - Installation: Installation.md - Getting Started: Getting-Started.md - Style Guide: Style-Guide.md - Configuration: Configuration.md - Deploy: Deploy.md","title":"mkdocs.yml"},{"location":"Deploy/","text":"Testing: mkdocs serve it will be viewable on a browser at http://127.0.0.1:8000/ or similar Build Locally: mkdocs build Deploy to Github: mkdocs gh-deploy","title":"Deploy"},{"location":"Deploy/#testing","text":"mkdocs serve it will be viewable on a browser at http://127.0.0.1:8000/ or similar","title":"Testing:"},{"location":"Deploy/#build-locally","text":"mkdocs build","title":"Build Locally:"},{"location":"Deploy/#deploy-to-github","text":"mkdocs gh-deploy","title":"Deploy to Github:"},{"location":"Getting-Started/","text":"Create a New Project mkdocs new myproject cd myproject Migrating Github Wiki to New Project git clone https://github.com/username/repo.wiki.git cp repo.wiki/*.md myproject/docs/ mv repo.wiki/Home.md myproject/docs/index.md","title":"Getting Started"},{"location":"Getting-Started/#create-a-new-project","text":"mkdocs new myproject cd myproject","title":"Create a New Project"},{"location":"Getting-Started/#migrating-github-wiki-to-new-project","text":"git clone https://github.com/username/repo.wiki.git cp repo.wiki/*.md myproject/docs/ mv repo.wiki/Home.md myproject/docs/index.md","title":"Migrating Github Wiki to New Project"},{"location":"Home/","text":"Welcome to the Read the Docs Documentation! Read The Docs primarily uses python, sphinx, and ReStructured Text (RST) to create robust and aesthetically pleasing documentation. MkDocs uses python and Markdown but MkDocs also has a Read the Docs theme. While the sphinx based version can use markdown as well, we will focus on the MkDocs version as it's more tailored to markdown. There are some advantages to RST (eg PDF and LAtex generation among others) Read this post for some discussion on using RST vs Markdown. In my opinion the general consensus is that RST is more robust for technical documentation whereas markdown was created with simplicity in mind and as a result can have some limitations.","title":"Welcome to the Read the Docs Documentation!"},{"location":"Home/#welcome-to-the-read-the-docs-documentation","text":"Read The Docs primarily uses python, sphinx, and ReStructured Text (RST) to create robust and aesthetically pleasing documentation. MkDocs uses python and Markdown but MkDocs also has a Read the Docs theme. While the sphinx based version can use markdown as well, we will focus on the MkDocs version as it's more tailored to markdown. There are some advantages to RST (eg PDF and LAtex generation among others) Read this post for some discussion on using RST vs Markdown. In my opinion the general consensus is that RST is more robust for technical documentation whereas markdown was created with simplicity in mind and as a result can have some limitations.","title":"Welcome to the Read the Docs Documentation!"},{"location":"Installation/","text":"Local MkDocs Installation Automatic Installation sudo apt-get install mkdocs Manual Installation: sudo apt-get install python3 python3-pip libyaml-dev pip install --upgrade pip pip install mkdocs","title":"Installation"},{"location":"Installation/#local-mkdocs-installation","text":"","title":"Local MkDocs Installation"},{"location":"Installation/#automatic-installation","text":"sudo apt-get install mkdocs","title":"Automatic Installation"},{"location":"Installation/#manual-installation","text":"sudo apt-get install python3 python3-pip libyaml-dev pip install --upgrade pip pip install mkdocs","title":"Manual Installation:"},{"location":"Style-Guide/","text":"If you're using a Github wiki and are intending to use it with MkDocs you'll want to use Commonmark markdown. The reason for this is MkDocs has python parsers that handle markdown flavours differently and it will choke on certain aspects of github flavoured markdown which end up rendering the final HTML pages less than favourably. Commonmark will still render as intended in Github. The following are some notes on proper syntax. Headings The headings (defined by # ) should follow a natural progression of the hierarchy of the page contents. You cannot have two title headings otherwise they won't show up on the table of contents on the right side of the page E.G. # Title ## Main heading one ### Sub Heading one ### Sub heading two ## Main heading two etc. Links Links should follow this syntax [Link](path to link) If it is a link to another wiki page it should be a relative path: [Installation](Installation) NOT [Installation](https://github.com/username/repo/wiki/Installation) Code Blocks Code blocks should be created with backticks: 1 set for inline code highlighting and 3 for code blocks Inline code highlights: `inline` will render as: inline Code blocks: ``` code block ``` will render as code block Bullets If you are doing subnests on bullet points you need 4 spaces on the sub bullet, not two more explanation HERE : - Bullet one - Bullet sub ```` It should render like this: - Bullet one - Bullet sub ### Numbering Numbers will only order properly if in a listed sequence. If that sequence is broken by paragraphs then the numbering will restart. Numbered lists are formatted as follows: item 1 item 2 item 3 item 4 If they are not in a listed sequence then you can just label the numbers manually with: Step 1. Step 2. Step 3. etc. or you can just use bullet points if the numbers really aren't that important. ### Symbols/Emojis Emojis are not supported with python markdown and should be avoided. Rather important text should be bolded or italicised The following in github: :exclamation: renders to :exclamation: but in the generated docs it will show :exclamation: ``` This is a comment:","title":"Style Guide"},{"location":"Style-Guide/#headings","text":"The headings (defined by # ) should follow a natural progression of the hierarchy of the page contents. You cannot have two title headings otherwise they won't show up on the table of contents on the right side of the page E.G. # Title ## Main heading one ### Sub Heading one ### Sub heading two ## Main heading two etc.","title":"Headings"},{"location":"Style-Guide/#links","text":"Links should follow this syntax [Link](path to link) If it is a link to another wiki page it should be a relative path: [Installation](Installation) NOT [Installation](https://github.com/username/repo/wiki/Installation)","title":"Links"},{"location":"Style-Guide/#code-blocks","text":"Code blocks should be created with backticks: 1 set for inline code highlighting and 3 for code blocks Inline code highlights: `inline` will render as: inline Code blocks: ``` code block ``` will render as code block","title":"Code Blocks"},{"location":"Style-Guide/#bullets","text":"If you are doing subnests on bullet points you need 4 spaces on the sub bullet, not two more explanation HERE : - Bullet one - Bullet sub ```` It should render like this: - Bullet one - Bullet sub ### Numbering Numbers will only order properly if in a listed sequence. If that sequence is broken by paragraphs then the numbering will restart. Numbered lists are formatted as follows: item 1 item 2 item 3 item 4 If they are not in a listed sequence then you can just label the numbers manually with: Step 1. Step 2. Step 3. etc. or you can just use bullet points if the numbers really aren't that important. ### Symbols/Emojis Emojis are not supported with python markdown and should be avoided. Rather important text should be bolded or italicised The following in github: :exclamation: renders to :exclamation: but in the generated docs it will show :exclamation: ``` This is a comment:","title":"Bullets"}]}